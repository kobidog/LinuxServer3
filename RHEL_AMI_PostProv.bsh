#!/bin/bash
# RHEL6 POST PROVISION SCRIPT - DAVE OWEN AUTOMATION  21-6-18
# MICROSOFT CHANGES INCORPORATED FOR RHEL AZURE MARKETPLACE IMAGES - STEVE BLACK 19/9/18

azurehostname=$1
osversion=$2
proxy=$3
satname=$4
satip=$5

# IPAddr=`curl http://169.254.169.254/latest/meta-data/local-ipv4`
# InstanceID=`curl http://169.254.169.254/latest/meta-data/instance-id`
export PATH=~/.local/bin:$PATH
# export https_proxy=https://${proxy}:8080
# export http_proxy=http://${proxy}:8080
source ~/.bash_profile
echo $(date) > /tmp/OUTPUT
echo >> /tmp/OUTPUT
echo $(env) >> /tmp/OUTPUT
echo "Param Hostname: ${azurehostname}" >> /tmp/OUTPUT
echo "Param OS Version: ${osversion}" >> /tmp/OUTPUT
echo "Param Proxy Server: ${proxy}" >> /tmp/OUTPUT
echo "Param Satellite Server: ${satname}" >> /tmp/OUTPUT
echo "Param Satellite IP: ${satip}" >> /tmp/OUTPUT

#####################################################################################
#RHEL 6 SECTION #########################################################################
#####################################################################################

if [ ${osversion} = ''RHEL6.7'' ]; then

# SSM SECTION REMOVED BY MICROSOFT (SB) 13/9/18
# echo ********SSM configuration started********* >> /tmp/OUTPUT
# yum install -y https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_amd64/amazon-ssm-agent.rpm
# stop amazon-ssm-agent
# sed -i "22i env http_proxy=http://${proxy}:8080" /etc/init/amazon-ssm-agent.conf
# sed -i "23i env https_proxy=http://${proxy}:8080" /etc/init/amazon-ssm-agent.conf
# sed -i "24i env HTTP_PROXY=http://${proxy}:8080" /etc/init/amazon-ssm-agent.conf
# sed -i "25i env HTTPS_PROXY=http://${proxy}:8080" /etc/init/amazon-ssm-agent.conf
# sed -i "26i env no_proxy=169.254.169.254" /etc/init/amazon-ssm-agent.conf
# start amazon-ssm-agent
# echo ********SSM configuration completed********* >> /tmp/OUTPUT

echo ********OS Configuration********* >> /tmp/OUTPUT

echo ${satip} ${satname} puppet >> /etc/hosts
echo ${IPAddr} ${azurehostname}.s2.ms.unilever.com  ${azurehostname} >> /etc/hosts

#RENAME SERVER HOSTNAME
hostname ${azurehostname}.s2.ms.unilever.com

#OUTPUT TO NETWORK CONFIG FILE
echo NETWORKING=yes > /etc/sysconfig/network
echo HOSTNAME=${azurehostname}.s2.ms.unilever.com >> /etc/sysconfig/network
sleep 15
echo "; generated by /sbin/dhclient-script" > /etc/resolv.conf

#ADD DNS SERVERS TO RESOLV.CONF
echo search eu-west-1.compute.internal s2.ms.unilever.com >> /etc/resolv.conf
echo nameserver 10.212.7.40 >> /etc/resolv.conf
echo nameserver 10.212.7.12 >> /etc/resolv.conf

cd /etc/yum.repos.d

for i in `ls -l | grep rhui | grep -iv balancers | awk '{print $9}'`; do sed -i -e 's/enabled=1/enabled=0/g' $i; done
cd ~
rpm -Uhv  http://${satname}/pub/katello-ca-consumer-latest.noarch.rpm
echo ********OS Configuration Completed********* >> /tmp/OUTPUT

echo ********Satellite Registration Started********* >> /tmp/OUTPUT
#ADD PROXY SETTINGS TO SATELLITE CONF
sed -i -e "s/brli410a.eu.unilever.com/${satname}/g" /etc/rhsm/rhsm.conf
sed -i -e "s/proxy_hostname =/proxy_hostname = ${proxy}/" /etc/rhsm/rhsm.conf
sed -i -e "s/proxy_port =/proxy_port = 8080/" /etc/rhsm/rhsm.conf
uloc=AWS
name=$(hostname)
uenv=`echo ${name} | cut -c6`

if [ ${uenv} = ''p'' ]; then
actkey=AWS_RHEL6_Prod
puppetenv=AWS_RHEL6_Prod
env=Prod
else
actkey=AWS_RHEL6_NonProd
puppetenv=AWS_RHEL6_NonProd
env=NonProd
fi

subscription-manager register --org='Unilever' --activationkey=${actkey} --force
sleep 10
subscription-manager refresh
subscription-manager attach --auto
echo subscription-manager list >> /tmp/OUTPUT
echo ********Satellite Registration completed********* >> /tmp/OUTPUT


echo ********Puppet configuration started********* >> /tmp/OUTPUT
yum -y install wget
yum -y install katello-agent
yum -y install puppet
cat > /etc/puppet/puppet.conf << EOF
[main]
vardir = /var/lib/puppet
logdir = /var/log/puppet
rundir = /var/run/puppet
ssldir = $vardir/ssl
[agent]
pluginsync      = true
report          = true
ignoreschedules = true
daemon          = false
ca_server       = ${satname}
certname        = ${name}
environment     = ${puppetenv}
server          = ${satname}
EOF
puppet agent -t
echo ********Puppet configuration completed********* >> /tmp/OUTPUT


echo ********Satellite Hostgroup Config********* >> /tmp/OUTPUT
cd /root
wget https://${satname}/pub/hammer_rmt_cli.sh
chmod 700 /root/hammer_rmt_cli.sh
/root/hammer_rmt_cli.sh
ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i /home/ham_rmt_cli/.ssh/ham_cli_id_rsa ham_rmt_cli@${satname} "hammer host update --hostgroup ${puppetenv} --environment ${puppetenv} --name ${name}"
puppet agent -t
echo ********Satellite Hostgroup Config********* >> /tmp/OUTPUT


echo ********Qualys Agent deployment started********* >> /tmp/OUTPUT
rpm -ivh /tmp/qualys-cloud-agent.x86_64.rpm
touch /etc/sysconfig/qualys-cloud-agent
echo https_proxy=https://${proxy}:8080/ >> /etc/sysconfig/qualys-cloud-agent 
/usr/local/qualys/cloud-agent/bin/qualys-cloud-agent.sh CustomerId=e74226f1-e335-6678-815f-f985cdcfac85 ActivationId=e1d92e54-1208-4dab-a062-3ca24ed86f6a
echo ********Qualys Agent deployment completed********* >> /tmp/OUTPUT


#echo ********Networker Backup Agent deployment started********* >> /tmp/OUTPUT
#ENABLE AWS REPO - TEMPORARY WORKAROUND FOR LACK OF SATELLITE
sed -i -e "s/enabled=0/enabled=1/" /etc/yum.repos.d/redhat-rhui.repo
yum -y install glibc.i686
sleep 10
rpm -ivh /tmp/lgtoclnt-9.1.1.4-1.x86_64.rpm
sleep 5
rpm -ivh /tmp/lgtoxtdclnt-9.1.1.4-1.x86_64.rpm
sleep 5
service networker start
#DISABLE AWS REPO - DEFAULT
sed -i -e "s/enabled=1/enabled=0/" /etc/yum.repos.d/redhat-rhui.repo
#echo ********Networker Backup Agent deployment completed********* >> /tmp/OUTPUT


echo ********TrendMicro Agent deployment started********* >> /tmp/OUTPUT
rpm -i /tmp/Agent-Core-RedHat_EL6-10.3.0-127.x86_64.rpm
sleep 15
/opt/ds_agent/dsa_control -r
/opt/ds_agent/dsa_control -x dsm_proxy://${proxy}:8080/
/opt/ds_agent/dsa_control -y relay_proxy://${proxy}:8080/
/opt/ds_agent/dsa_control -a dsm://agents.deepsecurity.trendmicro.com:443/ tenantID:EBB69566-EEBC-3D9A-0AFD-2A2D48D34264 token:6D3C6D08-3906-8AF5-99D2-827B1066176A policyid:601
echo ********TrendMicro Agent deployment completed******** >> /tmp/OUTPUT

yum -y update

echo ********updating server facts file******** >> /tmp/OUTPUT
cd /etc
mkdir -p  facter/facts.d
cd facter/facts.d
echo ueit_role=none  > server-facts.txt
echo ueit_location=AWS >> server-facts.txt
echo ueit_env=${env} >> server-facts.txt
else

#####################################################################################
#RHEL 7 SECTION #########################################################################
#####################################################################################

# SSM SECTION REMOVED BY MICROSOFT (SB) 13/9/18
# echo ********SSM configuration started********* >> /tmp/OUTPUT
# yum install -y https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_amd64/amazon-ssm-agent.rpm
# systemctl stop amazon-ssm-agent
# sed -i "12i Environment=\"http_proxy=http://${proxy}:8080\"" /etc/systemd/system/amazon-ssm-agent.service
# sed -i "13i Environment=\"https_proxy=http://${proxy}:8080\"" /etc/systemd/system/amazon-ssm-agent.service
# sed -i "14i Environment=\"HTTP_PROXY=http://${proxy}:8080\"" /etc/systemd/system/amazon-ssm-agent.service
# sed -i "15i Environment=\"HTTPS_PROXY=http://${proxy}:8080\"" /etc/systemd/system/amazon-ssm-agent.service
# sed -i "16i Environment=\"no_proxy=169.254.169.254\"" /etc/systemd/system/amazon-ssm-agent.serviceok
# systemctl daemon-reload
# systemctl start amazon-ssm-agent
# echo ********SSM configuration completed********* >> /tmp/OUTPUT


# echo ********OS Configuration********* >> /tmp/OUTPUT

# echo ${satip} ${satname} puppet >> /etc/hosts
# LINE REMOVED BY MICROSOFT
# echo ${IPAddr} ${azurehostname}.s2.ms.unilever.com  ${azurehostname} >> /etc/hosts

#RENAME SERVER HOSTNAME
# LINE REMOVED BY MICROSOFT
# hostnamectl set-hostname --static ${azurehostname}.s2.ms.unilever.com
# LINE REMOVED BY MICROSOFT - /etc/cloud does not exist?
# echo preserve_hostname: true >> /etc/cloud/cloud.cfg

#OUTPUT TO NETWORK CONFIG FILE
# LINES REMOVED BY MICROSOFT - network file already exists and contains NETWORKING setting below. HOSTNAME removed for testing
# echo NETWORKING=yes > /etc/sysconfig/network
# echo HOSTNAME=${azurehostname}.s2.ms.unilever.com >> /etc/sysconfig/network
# sleep 15

# !!! NEED TO CHANGE IP ADDRESSES OF THESE TO AZURE DCs !!!
#ADD DNS SERVERS TO RESOLV.CONF
# echo "; generated by /sbin/dhclient-script" > /etc/resolv.conf
# echo search eu-west-1.compute.internal s2.ms.unilever.com >> /etc/resolv.conf
# echo nameserver 10.212.7.40 >> /etc/resolv.conf
# echo nameserver 10.212.7.12 >> /etc/resolv.conf
cd /etc/yum.repos.d

for i in `ls -l | grep rhui | grep -iv balancers | awk '{print $9}'`; do sed -i -e 's/enabled=1/enabled=0/g' $i; done
cd ~
# KATELLO AGENT INSTALL REMOVED BY MICROSOFT (SB) 19/9/18
# rpm -Uhv  http://${satname}/pub/katello-ca-consumer-latest.noarch.rpm
echo ********OS Configuration Completed********* >> /tmp/OUTPUT

# PROXY SETTINGS, ACTIVATION KEY, & SUBSCRIPTION MANAGER PARTS OF SATELLITE REGISTRATION SECTION REMOVED BY MICROSOFT (SB) 19/9/18
# echo ********Satellite Registration Started********* >> /tmp/OUTPUT
#ADD PROXY SETTINGS TO SATELLITE CONF
# sed -i -e "s/brli410a.eu.unilever.com/${satname}/g" /etc/rhsm/rhsm.conf
# sed -i -e "s/proxy_hostname =/proxy_hostname = ${proxy}/" /etc/rhsm/rhsm.conf
# sed -i -e "s/proxy_port =/proxy_port = 8080/" /etc/rhsm/rhsm.conf
# uloc=AWS
uloc=AZURE
name=$(hostname)
uenv=p
# uenv=`echo ${name} | cut -c6`

if [ ${uenv} = ''p'' ]; then
# actkey=AWS_RHEL7_Prod
puppetenv=AZ_RHEL7_Prod
env=Prod
else
# actkey=AWS_RHEL7_NonProd
puppetenv=AZ_RHEL7_NonProd
env=NonProd
fi

# subscription-manager register --org='Unilever' --activationkey=${actkey} --force
# sleep 10
# subscription-manager refresh
# subscription-manager attach --auto
# echo subscription-manager list >> /tmp/OUTPUT
# echo ********Satellite Registration completed********* >> /tmp/OUTPUT


#echo ********Puppet configuration started********* >> /tmp/OUTPUT
# LINES REMOVED BY MICROSOFT - wget already in AM image and katello agent not required
# yum -y install wget
# yum -y install katello-agent
# yum -y install puppet
# cat > /etc/puppet/puppet.conf << EOF
#[main]
#vardir = /var/lib/puppet
#logdir = /var/log/puppet
#rundir = /var/run/puppet
#ssldir = $vardir/ssl
#[agent]
#pluginsync      = true
#report          = true
#ignoreschedules = true
#daemon          = false
#ca_server       = ${satname}
#certname        = ${name}
#environment     = ${puppetenv}
#server          = ${satname}
#EOF
#puppet agent -t
#echo ********Puppet configuration completed********* >> /tmp/OUTPUT


# echo ********Satellite Hostgroup Config********* >> /tmp/OUTPUT
# cd /root
# wget https://${satname}/pub/hammer_rmt_cli.sh
# chmod 700 /root/hammer_rmt_cli.sh
# /root/hammer_rmt_cli.sh
# ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i /home/ham_rmt_cli/.ssh/ham_cli_id_rsa ham_rmt_cli@${satname} "hammer host update --hostgroup ${puppetenv} --environment ${puppetenv} --name ${name}"
# puppet agent -t
# echo ********Satellite Hostgroup Config********* >> /tmp/OUTPUT


echo ********Qualys Agent deployment started********* >> /tmp/OUTPUT
rpm -ivh /tmp/qualys-cloud-agent.x86_64.rpm
touch /etc/sysconfig/qualys-cloud-agent
# echo https_proxy=https://${proxy}:8080/ >> /etc/sysconfig/qualys-cloud-agent
systemctl status qualys-cloud-agent
/usr/local/qualys/cloud-agent/bin/qualys-cloud-agent.sh CustomerId=e74226f1-e335-6678-815f-f985cdcfac85 ActivationId=e1d92e54-1208-4dab-a062-3ca24ed86f6a
echo ********Qualys Agent deployment completed********* >> /tmp/OUTPUT


#echo ********Networker Backup Agent deployment started********* >> /tmp/OUTPUT
#ENABLE AWS REPO - TEMPORARY WORKAROUND FOR LACK OF SATELLITE
# sed -i -e "s/enabled=0/enabled=1/" /etc/yum.repos.d/redhat-rhui.repo
yum -y install glibc.i686
sleep 10
rpm -ivh /tmp/lgtoclnt-9.1.1.4-1.x86_64.rpm
sleep 5
rpm -ivh /tmp/lgtoxtdclnt-9.1.1.4-1.x86_64.rpm
sleep 5
service networker start
#DISABLE AWS REPO - DEFAULT
# sed -i -e "s/enabled=1/enabled=0/" /etc/yum.repos.d/redhat-rhui.repo
#echo ********Networker Backup Agent deployment completed********* >> /tmp/OUTPUT

echo ********TrendMicro Agent deployment started********* >> /tmp/OUTPUT
rpm -i /tmp/Agent-Core-RedHat_EL7-10.3.0-127.x86_64.rpm
sleep 15
/opt/ds_agent/dsa_control -r
# /opt/ds_agent/dsa_control -x dsm_proxy://${proxy}:8080/
# /opt/ds_agent/dsa_control -y relay_proxy://${proxy}:8080/
/opt/ds_agent/dsa_control -a dsm://agents.deepsecurity.trendmicro.com:443/ tenantID:EBB69566-EEBC-3D9A-0AFD-2A2D48D34264 token:6D3C6D08-3906-8AF5-99D2-827B1066176A policyid:601
echo ********TrendMicro Agent deployment completed******** >> /tmp/OUTPUT
echo /etc/init.d/ds_agent status >> /tmp/OUTPUT

#UPDATE ALL - ONLY WORKS ONCE REGISTERED TO SATELLITE TO GET UNILEVER APPROVED UPDATES
yum -y update

echo ********updating server facts file******** >> /tmp/OUTPUT
cd /etc
mkdir -p  facter/facts.d
cd facter/facts.d
echo ueit_role=none  > server-facts.txt
echo ueit_location=AZURE >> server-facts.txt
echo ueit_env=${env} >> server-facts.txt
fi